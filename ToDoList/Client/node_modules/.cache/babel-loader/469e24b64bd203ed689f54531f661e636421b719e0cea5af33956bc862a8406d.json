{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\llick\\\\OneDrive\\\\Belgeler\\\\TODOLIST\\\\ToDoList\\\\Client\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check if user is logged in on app start\n    const token = localStorage.getItem('token');\n    const userData = localStorage.getItem('user');\n    if (token && userData) {\n      try {\n        setUser(JSON.parse(userData));\n      } catch (error) {\n        console.error('Error parsing user data:', error);\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n      }\n    }\n    setLoading(false);\n  }, []);\n  const login = async credentials => {\n    try {\n      const response = await authAPI.login(credentials);\n      const {\n        token\n      } = response.data;\n      localStorage.setItem('token', token);\n\n      // Get user info from token or make a separate call\n      const userInfo = {\n        username: credentials.userName\n        // You might want to decode the JWT token to get more user info\n      };\n      localStorage.setItem('user', JSON.stringify(userInfo));\n      setUser(userInfo);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response;\n      return {\n        success: false,\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || 'Login failed'\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      await authAPI.register(userData);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2;\n      return {\n        success: false,\n        error: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || 'Registration failed'\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setUser(null);\n  };\n  const changePassword = async passwordData => {\n    try {\n      await authAPI.changePassword(passwordData);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response3;\n      return {\n        success: false,\n        error: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || 'Password change failed'\n      };\n    }\n  };\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    changePassword,\n    isAuthenticated: !!user\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authAPI","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","localStorage","getItem","userData","JSON","parse","error","console","removeItem","login","credentials","response","data","setItem","userInfo","username","userName","stringify","success","_error$response","register","_error$response2","logout","changePassword","passwordData","_error$response3","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/llick/OneDrive/Belgeler/TODOLIST/ToDoList/Client/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { authAPI } from '../services/api';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Check if user is logged in on app start\r\n    const token = localStorage.getItem('token');\r\n    const userData = localStorage.getItem('user');\r\n    \r\n    if (token && userData) {\r\n      try {\r\n        setUser(JSON.parse(userData));\r\n      } catch (error) {\r\n        console.error('Error parsing user data:', error);\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('user');\r\n      }\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = async (credentials) => {\r\n    try {\r\n      const response = await authAPI.login(credentials);\r\n      const { token } = response.data;\r\n      \r\n      localStorage.setItem('token', token);\r\n      \r\n      // Get user info from token or make a separate call\r\n      const userInfo = {\r\n        username: credentials.userName,\r\n        // You might want to decode the JWT token to get more user info\r\n      };\r\n      \r\n      localStorage.setItem('user', JSON.stringify(userInfo));\r\n      setUser(userInfo);\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data || 'Login failed'\r\n      };\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      await authAPI.register(userData);\r\n      return { success: true };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data || 'Registration failed'\r\n      };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    setUser(null);\r\n  };\r\n\r\n  const changePassword = async (passwordData) => {\r\n    try {\r\n      await authAPI.changePassword(passwordData);\r\n      return { success: true };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data || 'Password change failed'\r\n      };\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    login,\r\n    register,\r\n    logout,\r\n    changePassword,\r\n    isAuthenticated: !!user\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,OAAO,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMQ,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGT,UAAU,CAACM,WAAW,CAAC;EACvC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAQpB,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMgB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,QAAQ,GAAGF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAE7C,IAAIF,KAAK,IAAIG,QAAQ,EAAE;MACrB,IAAI;QACFN,OAAO,CAACO,IAAI,CAACC,KAAK,CAACF,QAAQ,CAAC,CAAC;MAC/B,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAChDL,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;QAChCP,YAAY,CAACO,UAAU,CAAC,MAAM,CAAC;MACjC;IACF;IACAT,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMU,KAAK,GAAG,MAAOC,WAAW,IAAK;IACnC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAM1B,OAAO,CAACwB,KAAK,CAACC,WAAW,CAAC;MACjD,MAAM;QAAEV;MAAM,CAAC,GAAGW,QAAQ,CAACC,IAAI;MAE/BX,YAAY,CAACY,OAAO,CAAC,OAAO,EAAEb,KAAK,CAAC;;MAEpC;MACA,MAAMc,QAAQ,GAAG;QACfC,QAAQ,EAAEL,WAAW,CAACM;QACtB;MACF,CAAC;MAEDf,YAAY,CAACY,OAAO,CAAC,MAAM,EAAET,IAAI,CAACa,SAAS,CAACH,QAAQ,CAAC,CAAC;MACtDjB,OAAO,CAACiB,QAAQ,CAAC;MAEjB,OAAO;QAAEI,OAAO,EAAE;MAAK,CAAC;IAC1B,CAAC,CAAC,OAAOZ,KAAK,EAAE;MAAA,IAAAa,eAAA;MACd,OAAO;QACLD,OAAO,EAAE,KAAK;QACdZ,KAAK,EAAE,EAAAa,eAAA,GAAAb,KAAK,CAACK,QAAQ,cAAAQ,eAAA,uBAAdA,eAAA,CAAgBP,IAAI,KAAI;MACjC,CAAC;IACH;EACF,CAAC;EAED,MAAMQ,QAAQ,GAAG,MAAOjB,QAAQ,IAAK;IACnC,IAAI;MACF,MAAMlB,OAAO,CAACmC,QAAQ,CAACjB,QAAQ,CAAC;MAChC,OAAO;QAAEe,OAAO,EAAE;MAAK,CAAC;IAC1B,CAAC,CAAC,OAAOZ,KAAK,EAAE;MAAA,IAAAe,gBAAA;MACd,OAAO;QACLH,OAAO,EAAE,KAAK;QACdZ,KAAK,EAAE,EAAAe,gBAAA,GAAAf,KAAK,CAACK,QAAQ,cAAAU,gBAAA,uBAAdA,gBAAA,CAAgBT,IAAI,KAAI;MACjC,CAAC;IACH;EACF,CAAC;EAED,MAAMU,MAAM,GAAGA,CAAA,KAAM;IACnBrB,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;IAChCP,YAAY,CAACO,UAAU,CAAC,MAAM,CAAC;IAC/BX,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,MAAM0B,cAAc,GAAG,MAAOC,YAAY,IAAK;IAC7C,IAAI;MACF,MAAMvC,OAAO,CAACsC,cAAc,CAACC,YAAY,CAAC;MAC1C,OAAO;QAAEN,OAAO,EAAE;MAAK,CAAC;IAC1B,CAAC,CAAC,OAAOZ,KAAK,EAAE;MAAA,IAAAmB,gBAAA;MACd,OAAO;QACLP,OAAO,EAAE,KAAK;QACdZ,KAAK,EAAE,EAAAmB,gBAAA,GAAAnB,KAAK,CAACK,QAAQ,cAAAc,gBAAA,uBAAdA,gBAAA,CAAgBb,IAAI,KAAI;MACjC,CAAC;IACH;EACF,CAAC;EAED,MAAMc,KAAK,GAAG;IACZ9B,IAAI;IACJE,OAAO;IACPW,KAAK;IACLW,QAAQ;IACRE,MAAM;IACNC,cAAc;IACdI,eAAe,EAAE,CAAC,CAAC/B;EACrB,CAAC;EAED,oBACET,OAAA,CAACC,WAAW,CAACwC,QAAQ;IAACF,KAAK,EAAEA,KAAM;IAAAhC,QAAA,EAChCA;EAAQ;IAAAmC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACrC,GAAA,CA3FWF,YAAY;AAAAwC,EAAA,GAAZxC,YAAY;AAAA,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}