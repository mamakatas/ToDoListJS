{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5244/api';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle auth errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth API\nexport const authAPI = {\n  login: credentials => api.post('/auth/login', credentials),\n  register: userData => api.post('/auth/register', userData),\n  changePassword: passwordData => api.post('/auth/change-password', passwordData),\n  getProfiles: () => api.get('/auth/profile')\n};\n\n// Tasks API\nexport const tasksAPI = {\n  getAllTasks: (query = {}) => api.get('/task/admin-get-all-tasks', {\n    params: query\n  }),\n  getUserTasks: (query = {}) => api.get('/task/user-tasks', {\n    params: query\n  }),\n  getTaskById: id => api.get(`/task/${id}-admin-get-by-id`),\n  createTask: taskData => api.post('/task', taskData),\n  updateTask: (id, taskData) => api.put(`/task/${id}`, taskData),\n  updateTaskCompletion: (id, status) => api.put(`/task/${id}/completion`, status, {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }),\n  deleteTask: id => api.delete(`/task/${id}`),\n  addMessageToTask: (taskId, messageContent) => api.post(`/task/${taskId}/messages`, messageContent),\n  getMessagesForTask: taskId => api.get(`/task/${taskId}/messages`)\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","login","credentials","post","register","userData","changePassword","passwordData","getProfiles","get","tasksAPI","getAllTasks","query","params","getUserTasks","getTaskById","id","createTask","taskData","updateTask","put","updateTaskCompletion","deleteTask","delete","addMessageToTask","taskId","messageContent","getMessagesForTask"],"sources":["C:/Users/llick/OneDrive/Belgeler/TODOLIST/ToDoList/Client/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5244/api';\r\n\r\n// Create axios instance\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor to add auth token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor to handle auth errors\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Auth API\r\nexport const authAPI = {\r\n  login: (credentials) => api.post('/auth/login', credentials),\r\n  register: (userData) => api.post('/auth/register', userData),\r\n  changePassword: (passwordData) => api.post('/auth/change-password', passwordData),\r\n  getProfiles: () => api.get('/auth/profile'),\r\n};\r\n\r\n// Tasks API\r\nexport const tasksAPI = {\r\n  getAllTasks: (query = {}) => api.get('/task/admin-get-all-tasks', { params: query }),\r\n  getUserTasks: (query = {}) => api.get('/task/user-tasks', { params: query }),\r\n  getTaskById: (id) => api.get(`/task/${id}-admin-get-by-id`),\r\n  createTask: (taskData) => api.post('/task', taskData),\r\n  updateTask: (id, taskData) => api.put(`/task/${id}`, taskData),\r\n  updateTaskCompletion: (id, status) => api.put(`/task/${id}/completion`, status, {\r\n    headers: { 'Content-Type': 'application/json' }\r\n  }),\r\n  deleteTask: (id) => api.delete(`/task/${id}`),\r\n  addMessageToTask: (taskId, messageContent) => api.post(`/task/${taskId}/messages`, messageContent),\r\n  getMessagesForTask: (taskId) => api.get(`/task/${taskId}/messages`),\r\n};\r\n\r\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}